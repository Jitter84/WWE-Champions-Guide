!function(e){function t(n){if(a[n])return a[n].exports;var i=a[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var a={};t.m=e,t.c=a,t.i=function(e){return e},t.d=function(e,a,n){t.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=1362)}({1362:function(e,t,a){e.exports=a(7)},7:function(e,t){function a(e){switch(e){case"Move_Generate_Abs":return"Generate";default:return"None"}}function n(e){var t={};switch(t.maxTalentScore=5e3,t.buffMoveType="Move_Generate_Abs",t.buffGemType="Blue",e){case 1:t.text="Moves that Generate Blue Gems will Create 1 more Blue Gem(s).",t.buffValue=1,t.talentScore=300;break;case 2:t.text="Moves that Generate Blue Gems will Create 2 more Blue Gem(s).",t.buffValue=2,t.talentScore=1e3;break;case 3:t.text="Moves that Generate Blue Gems will Create 3 more Blue Gem(s).",t.buffValue=3,t.talentScore=2500;break;case 4:t.text="Moves that Generate Blue Gems will Create 4 more Blue Gem(s).",t.buffValue=4,t.talentScore=5e3}return t}$(document).ready(function(){function e(){v=d[b][h]}function t(){$("#wrestlerLevelUI").text("1/"+v.LevelCap),$("#wrestlerMaxLevel").val(v.LevelCap),$("#wrestlerLevelInput").val(1),$("#wrestlerLevelInput").prop("min",1),$("#wrestlerLevelInput").prop("max",v.LevelCap),i(1),l(v.Abilities)}function i(e){var t=s(e);$("#stat-hp").text(t.HP),$("#stat-red").text(t.Red),$("#stat-black").text(t.Black),$("#stat-yellow").text(t.Yellow),$("#stat-blue").text(t.Blue),$("#stat-green").text(t.Green),$("#stat-purpel").text(t.Purpel)}function r(e){var t=[];return e.move.Effects.forEach(function(e){t.push($("<input/>",{type:"hidden",name:"effects[]",value:e}))}),$("<div/>",{class:"row ability",sylte:"margin-bottom:10px;","data-buffed-id":e.move.AffectedValueID,"data-gem-type":e.gemType,"data-effects":JSON.stringify(e.move.Effects)}).append(t).append($("<div/>",{class:"col-xs-3"}).append($("<img/>",{src:"/img/Gems/"+e.gemType+".png",width:45,height:45,alt:e.gemType+" Gem",class:"center-block"})).append($("<p/>",{text:e.cost,class:"text-center"}))).append($("<div/>",{class:"col-xs-9"}).append($("<div/>",{class:"row"}).append($("<div/>",{class:"col-xs-12"}).append($("<p/>").append($("<strong/>",{text:e.name})))).append($("<div/>",{class:"col-xs-12"}).append($("<p/>",{html:e.levels[0].html,class:"ability-text"}))).append($("<div/>",{class:"col-xs-11"}).append($("<div/>",{class:"level-selector"}).append($("<p/>").append($("<span/>",{text:1,class:"abilitySelectedLevel"})).append("/").append($("<span/>",{text:e.levelCap,class:"abilityMaxLevel"}))).append($("<input/>",{type:"range",name:"ability-level",min:1,max:e.levelCap,value:1}).on("input",function(){var e=$(this).val(),t=$(this).parent().find(".abilitySelectedLevel").first(),a=$(this).parent().parent().parent().find(".ability-text").first(),n=$(this).next().val(),i=u(n,e);t.text(e),a.html(i.html)})).append($("<input/>",{class:"ability-id",name:"ability-id",type:"hidden",value:e.ID}))))))}function l(e){$("#abilities").empty(),e.forEach(function(e,t,a){$("#abilities").append(r(e))})}function s(e){for(var t in v.Stats){var a=v.Stats[t];if(a.level==e)return a.stats}}function f(e){var t=v.Abilities;for(var a in t)if(t[a].ID==e)return t[a];return!1}function u(e,t){var a=f(e),n=a.levels;for(var i in n)if(n[i].level==t)return n[i];return!1}function c(e,t,a,n,i){if(-1!==$.inArray(e,t)){var r=a.find("span[data-variable-name='"+n+"']");if(r&&r.length){return i==r.first().text()}return!0}return!1}function p(e,t){var a=e.find("span[data-variable-name='val1']").first(),n=parseInt(a.text())+t;a.text(n)}function o(e,t,a){$(".ability").each(function(n,i){var r=$(this).data("effects"),l=$(this).data("buffed-id"),s=($(this).data("gem-type"),$(this).find(".ability-text").first());c(t,r,s,l,e)&&p(s,a)})}var d={},v={},m=$("#wrestlerSlug").val();if(m){var h="3_3",b="Gold";$.getJSON("/db/wrestler/"+m+".json",function(a){d=a,e(),t()}),$("#wrestlerLevelInput").on("input",function(){var e=$(this).val(),t=$("#wrestlerMaxLevel").val();$("#wrestlerLevelUI").text(e+"/"+t),i(e)}),$('input[name="stars"]').on("change",function(){h=$(this).val(),e(),t()}),$('input[name="tier"]').on("change",function(){b=$(this).val(),e(),t()}),$("input.trainer-level").on("input",function(){var e=parseInt($(this).val()),t=($(this).attr("max"),n(e)),a=$(this).closest(".trainer").find(".trainer-buff-text").first(),i=$(this).closest(".trainer").find(".trainer-talent-score").first(),r=$(this).closest(".trainer").find(".activate-trainer-effect").first(),l=$(this).closest(".trainer").find(".deactivate-trainer-effect").first();r.data("buff-value",t.buffValue),l.data("buff-value",-1*t.buffValue),a.empty(),i.empty(),i.text(t.talentScore+"/"+t.maxTalentScore),a.text(t.text)}),$(".activate-trainer-effect").on("click",function(){$(this).addClass("hidden"),$(this).parent().find(".deactivate-trainer-effect").removeClass("hidden");var e=$(this).data("buff-gem-type"),t=$(this).data("buff-move-type"),n=$(this).data("buff-value");o(e,a(t),n)}),$(".deactivate-trainer-effect").on("click",function(){$(this).addClass("hidden"),$(this).parent().find(".activate-trainer-effect").removeClass("hidden");var e=$(this).data("buff-gem-type"),t=$(this).data("buff-move-type"),n=$(this).data("buff-value");o(e,a(t),n)})}})}});